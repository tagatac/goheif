// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/tagatac/goheif/heic2jpg (interfaces: Converter)

// Package mock_heic2jpg is a generated GoMock package.
package mock_heic2jpg

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockConverter is a mock of Converter interface.
type MockConverter struct {
	ctrl     *gomock.Controller
	recorder *MockConverterMockRecorder
}

// MockConverterMockRecorder is the mock recorder for MockConverter.
type MockConverterMockRecorder struct {
	mock *MockConverter
}

// NewMockConverter creates a new mock instance.
func NewMockConverter(ctrl *gomock.Controller) *MockConverter {
	mock := &MockConverter{ctrl: ctrl}
	mock.recorder = &MockConverterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockConverter) EXPECT() *MockConverterMockRecorder {
	return m.recorder
}

// HEIC2JPG mocks base method.
func (m *MockConverter) HEIC2JPG(arg0, arg1 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "HEIC2JPG", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// HEIC2JPG indicates an expected call of HEIC2JPG.
func (mr *MockConverterMockRecorder) HEIC2JPG(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HEIC2JPG", reflect.TypeOf((*MockConverter)(nil).HEIC2JPG), arg0, arg1)
}
